{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AlreadyInitialized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ECDSAInvalidSignature",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "ECDSAInvalidSignatureLength",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "ECDSAInvalidSignatureS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidSignature",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotInitializing",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UsedNonce",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "EIP712DomainChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "version",
          "type": "uint64"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "eip712Domain",
      "outputs": [
        {
          "internalType": "bytes1",
          "name": "fields",
          "type": "bytes1"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "version",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "verifyingContract",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "extensions",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ownerAccounts",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608080604052346100b7577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0e9081549060ff8260401c166100a957506001600160401b036002600160401b031982821601610064575b604051610cad90816100bd8239f35b6001600160401b031990911681179091556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1388080610055565b62dc149f60e41b8152600490fd5b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c9182637ecebe0014610800575081638129fc1c146103d557816384b0196e146102a6578163d95b8c1214610099575063f641d5ec1461005c57600080fd5b34610095576020366003190112610095576020916001600160a01b0390829082610084610834565b168152603285522054169051908152f35b5080fd5b9190503461028b57606036600319011261028b5781359167ffffffffffffffff8084116102a257366023850112156102a257838201359181831161028f57858451956020946100f186601f19601f84011601896108c1565b808852366024828401011161028b57806024879301838a0137870101526001600160a01b03602435818116969087900361028757604435938789526033865286892054851115610277578651868101907f089f3bcde4e6fb1e7b59677ffac384b0d05d87e4a54f17b628082a912e03d6e4825289898201528660608201523360808201526080815260a0810181811084821117610264578952519020610195610c06565b61019d610c51565b90895191898301917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f83528b84015260608301524660808301523060a083015260a0825260c082019382851090851117610264578361021e9360e28d989794604294610227988f528151902061190160f01b855260c2820152015220610ab5565b90929192610b81565b16036102565750838552603382528285205533845260329052822080546001600160a01b031916909117905580f35b8351638baa579f60e01b8152fd5b634e487b7160e01b8c526041875260248cfd5b8651632931e44360e21b81528490fd5b8780fd5b8280fd5b634e487b7160e01b865260419052602485fd5b8480fd5b9190503461028b578260031936011261028b57825415806103cb575b15610390576102cf61091d565b926102d86109db565b908251926020928385019585871067ffffffffffffffff88111761037d57509280610333838896610326998b9996528686528151998a99600f60f81b8b5260e0868c015260e08b019061084f565b91898303908a015261084f565b924660608801523060808801528460a088015286840360c088015251928381520193925b82811061036657505050500390f35b835185528695509381019392810192600101610357565b634e487b7160e01b845260419052602483fd5b906020606492519162461bcd60e51b835282015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152fd5b50600154156102c2565b90503461028b578260031936011261028b577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0e8054909281811c60ff161580806107ec575b15806107c8575b6107b957600192818467ffffffffffffffff19831617875561079a575b50815161044a8161088f565b60158152602094744275726e65724163636f756e74526567697374727960581b8683015283519161047a8361088f565b60058352640302e312e360dc1b87840152610493610a74565b61049b610a74565b80519167ffffffffffffffff9283811161078757806104bb6002546108e3565b93601f94858111610717575b508a908d868411600114610696579261068b575b5050600019600383901b1c191690881b176002555b83519283116106785750819060039361050985546108e3565b82811161060a575b508891831160011461058e578a92610583575b505060001982841b1c191690851b1790555b858055858355610544578480f35b7fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29368ff000000000000000019815416905551908152a1388080808480f35b015190503880610524565b848b528793507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9190601f1984168c5b8b8282106105f457505084116105dc575b505050811b019055610536565b015160001983861b60f8161c191690553880806105cf565b8385015186558b979095019493840193016105be565b90919250848b527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b8380860160051c8201928b871061066f575b9186958b929594930160051c01915b828110610661575050610511565b8d81558695508a9101610653565b92508192610644565b634e487b7160e01b8a5260419052602489fd5b0151905038806104db565b600281528b94507f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace929190601f198516908e5b82821061070057505084116106e7575b505050811b016002556104f0565b015160001960f88460031b161c191690553880806106d9565b8385015186558e979095019493840193018e6106c9565b90915060028d527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace8580850160051c8201928d861061077e575b859493910160051c909101908b908f5b838210610770575050506104c7565b81558594508c91018f610761565b92508192610751565b634e487b7160e01b8b526041825260248bfd5b68ffffffffffffffffff1916680100000000000000011785553861043e565b815162dc149f60e41b81528490fd5b50303b15806107d8575b15610421565b50600167ffffffffffffffff8416146107d2565b50600167ffffffffffffffff84161061041a565b8490843461028b57602036600319011261028b576020926001600160a01b03610827610834565b1681526033845220548152f35b600435906001600160a01b038216820361084a57565b600080fd5b919082519283825260005b84811061087b575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161085a565b6040810190811067ffffffffffffffff8211176108ab57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176108ab57604052565b90600182811c92168015610913575b60208310146108fd57565b634e487b7160e01b600052602260045260246000fd5b91607f16916108f2565b6040519060008260025491610931836108e3565b808352926001908181169081156109b9575060011461095a575b50610958925003836108c1565b565b6002600090815291507f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b84831061099e575061095893505081016020013861094b565b81935090816020925483858a01015201910190918592610985565b90506020925061095894915060ff191682840152151560051b8201013861094b565b60405190600082600354916109ef836108e3565b808352926001908181169081156109b95750600114610a155750610958925003836108c1565b6003600090815291507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b848310610a59575061095893505081016020013861094b565b81935090816020925483858a01015201910190918592610a40565b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0e5460401c1615610aa357565b604051631afcd79f60e31b8152600490fd5b8151919060418303610ae657610adf92506020820151906060604084015193015160001a90610af1565b9192909190565b505060009160029190565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411610b7557926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa15610b695780516001600160a01b03811615610b6057918190565b50809160019190565b604051903d90823e3d90fd5b50505060009160039190565b6004811015610bf05780610b93575050565b60018103610bad5760405163f645eedf60e01b8152600490fd5b60028103610bce5760405163fce698f760e01b815260048101839052602490fd5b600314610bd85750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b600052602160045260246000fd5b610c0e61091d565b8051908115610c1e576020012090565b50506000548015610c2c5790565b507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47090565b610c596109db565b8051908115610c69576020012090565b50506001548015610c2c579056fea2646970667358221220cc1c07625d24aadebc3da71a6d2e493f2b7d8080d817d86688c5cf94964d1a0c64736f6c63430008140033",
    "sourceMap": "701:1969:8:-:0;;;;;;;8179:65:1;701:1969:8;;;;;;;;;7241:73:1;;-1:-1:-1;;;;;;;;;;;;701:1969:8;;;7327:34:1;7323:146;;-1:-1:-1;701:1969:8;;;;;;;;;7323:146:1;-1:-1:-1;;;;;;701:1969:8;;;;;;;;;;;;;7429:29:1;;701:1969:8;;7429:29:1;7323:146;;;;;7241:73;-1:-1:-1;;;7283:20:1;;;;;701:1969:8;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060408181526004918236101561001657600080fd5b600092833560e01c9182637ecebe0014610800575081638129fc1c146103d557816384b0196e146102a6578163d95b8c1214610099575063f641d5ec1461005c57600080fd5b34610095576020366003190112610095576020916001600160a01b0390829082610084610834565b168152603285522054169051908152f35b5080fd5b9190503461028b57606036600319011261028b5781359167ffffffffffffffff8084116102a257366023850112156102a257838201359181831161028f57858451956020946100f186601f19601f84011601896108c1565b808852366024828401011161028b57806024879301838a0137870101526001600160a01b03602435818116969087900361028757604435938789526033865286892054851115610277578651868101907f089f3bcde4e6fb1e7b59677ffac384b0d05d87e4a54f17b628082a912e03d6e4825289898201528660608201523360808201526080815260a0810181811084821117610264578952519020610195610c06565b61019d610c51565b90895191898301917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f83528b84015260608301524660808301523060a083015260a0825260c082019382851090851117610264578361021e9360e28d989794604294610227988f528151902061190160f01b855260c2820152015220610ab5565b90929192610b81565b16036102565750838552603382528285205533845260329052822080546001600160a01b031916909117905580f35b8351638baa579f60e01b8152fd5b634e487b7160e01b8c526041875260248cfd5b8651632931e44360e21b81528490fd5b8780fd5b8280fd5b634e487b7160e01b865260419052602485fd5b8480fd5b9190503461028b578260031936011261028b57825415806103cb575b15610390576102cf61091d565b926102d86109db565b908251926020928385019585871067ffffffffffffffff88111761037d57509280610333838896610326998b9996528686528151998a99600f60f81b8b5260e0868c015260e08b019061084f565b91898303908a015261084f565b924660608801523060808801528460a088015286840360c088015251928381520193925b82811061036657505050500390f35b835185528695509381019392810192600101610357565b634e487b7160e01b845260419052602483fd5b906020606492519162461bcd60e51b835282015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152fd5b50600154156102c2565b90503461028b578260031936011261028b577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0e8054909281811c60ff161580806107ec575b15806107c8575b6107b957600192818467ffffffffffffffff19831617875561079a575b50815161044a8161088f565b60158152602094744275726e65724163636f756e74526567697374727960581b8683015283519161047a8361088f565b60058352640302e312e360dc1b87840152610493610a74565b61049b610a74565b80519167ffffffffffffffff9283811161078757806104bb6002546108e3565b93601f94858111610717575b508a908d868411600114610696579261068b575b5050600019600383901b1c191690881b176002555b83519283116106785750819060039361050985546108e3565b82811161060a575b508891831160011461058e578a92610583575b505060001982841b1c191690851b1790555b858055858355610544578480f35b7fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29368ff000000000000000019815416905551908152a1388080808480f35b015190503880610524565b848b528793507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9190601f1984168c5b8b8282106105f457505084116105dc575b505050811b019055610536565b015160001983861b60f8161c191690553880806105cf565b8385015186558b979095019493840193016105be565b90919250848b527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b8380860160051c8201928b871061066f575b9186958b929594930160051c01915b828110610661575050610511565b8d81558695508a9101610653565b92508192610644565b634e487b7160e01b8a5260419052602489fd5b0151905038806104db565b600281528b94507f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace929190601f198516908e5b82821061070057505084116106e7575b505050811b016002556104f0565b015160001960f88460031b161c191690553880806106d9565b8385015186558e979095019493840193018e6106c9565b90915060028d527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace8580850160051c8201928d861061077e575b859493910160051c909101908b908f5b838210610770575050506104c7565b81558594508c91018f610761565b92508192610751565b634e487b7160e01b8b526041825260248bfd5b68ffffffffffffffffff1916680100000000000000011785553861043e565b815162dc149f60e41b81528490fd5b50303b15806107d8575b15610421565b50600167ffffffffffffffff8416146107d2565b50600167ffffffffffffffff84161061041a565b8490843461028b57602036600319011261028b576020926001600160a01b03610827610834565b1681526033845220548152f35b600435906001600160a01b038216820361084a57565b600080fd5b919082519283825260005b84811061087b575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161085a565b6040810190811067ffffffffffffffff8211176108ab57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176108ab57604052565b90600182811c92168015610913575b60208310146108fd57565b634e487b7160e01b600052602260045260246000fd5b91607f16916108f2565b6040519060008260025491610931836108e3565b808352926001908181169081156109b9575060011461095a575b50610958925003836108c1565b565b6002600090815291507f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b84831061099e575061095893505081016020013861094b565b81935090816020925483858a01015201910190918592610985565b90506020925061095894915060ff191682840152151560051b8201013861094b565b60405190600082600354916109ef836108e3565b808352926001908181169081156109b95750600114610a155750610958925003836108c1565b6003600090815291507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b848310610a59575061095893505081016020013861094b565b81935090816020925483858a01015201910190918592610a40565b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0e5460401c1615610aa357565b604051631afcd79f60e31b8152600490fd5b8151919060418303610ae657610adf92506020820151906060604084015193015160001a90610af1565b9192909190565b505060009160029190565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411610b7557926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa15610b695780516001600160a01b03811615610b6057918190565b50809160019190565b604051903d90823e3d90fd5b50505060009160039190565b6004811015610bf05780610b93575050565b60018103610bad5760405163f645eedf60e01b8152600490fd5b60028103610bce5760405163fce698f760e01b815260048101839052602490fd5b600314610bd85750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b600052602160045260246000fd5b610c0e61091d565b8051908115610c1e576020012090565b50506000548015610c2c5790565b507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47090565b610c596109db565b8051908115610c69576020012090565b50506001548015610c2c579056fea2646970667358221220cc1c07625d24aadebc3da71a6d2e493f2b7d8080d817d86688c5cf94964d1a0c64736f6c63430008140033",
    "sourceMap": "701:1969:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;701:1969:8;;;;;;-1:-1:-1;;;;;701:1969:8;;;;;;:::i;:::-;;;;821:48;701:1969;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;701:1969:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;701:1969:8;;;;;;;;;;;;;;;;;;1827:6;701:1969;;;;;;1818:23;;;1814:72;;701:1969;;1970:245;;;701:1969;2002:108;701:1969;;;;;;;;;;;;2187:10;701:1969;;;;;1970:245;;701:1969;;;;;;;;;;;;;;;1943:286;;3673:17:4;;:::i;:::-;3692:20;;:::i;:::-;701:1969:8;;;3650:93:4;;;;701:1969:8;2053:95:4;701:1969:8;;2053:95:4;;;701:1969:8;;2053:95:4;;701:1969:8;3714:13:4;701:1969:8;2053:95:4;;701:1969:8;3737:4:4;701:1969:8;2053:95:4;;701:1969:8;;3650:93:4;;2053:95;701:1969:8;;;;;;;;;;;;;3639:27:3;701:1969:8;3500:233:5;701:1969:8;;;;3500:233:5;701:1969:8;3695:8:3;701:1969:8;;;;;3640:104:4;;-1:-1:-1;;;3500:233:5;;;;;;;;;3639:27:3;:::i;:::-;3695:8;;;;;:::i;:::-;701:1969:8;2464:25;2460:81;;-1:-1:-1;701:1969:8;;;1827:6;701:1969;;;;;;2187:10;701:1969;;2627:13;701:1969;;;;;;-1:-1:-1;;;;;;701:1969:8;;;;;;;;2460:81;701:1969;;-1:-1:-1;;;2512:18:8;;;701:1969;-1:-1:-1;;;701:1969:8;;;;;;;;1814:72;701:1969;;-1:-1:-1;;;1864:11:8;;701:1969;;1864:11;701:1969;;;;;;;;;-1:-1:-1;;;701:1969:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5163:16:4;:39;;;701:1969:8;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;5347:13:4;;701:1969:8;;;;5382:4:4;701:1969:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;701:1969:8;;;;;;;;;;;;;-1:-1:-1;;;701:1969:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;701:1969:8;;;;;5163:39:4;701:1969:8;5183:14:4;701:1969:8;5183:19:4;5163:39;;701:1969:8;;;;;;;;;;;;;;8179:65:1;701:1969:8;;8179:65:1;;701:1969:8;;;;;4113:16:1;;;4145:36;;701:1969:8;4143:39:1;:99;;;701:1969:8;4139:157:1;;4322:1;701:1969:8;;;;;;;;;;4333:67:1;;701:1969:8;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;701:1969:8;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;701:1969:8;;;;6238:76:1;;:::i;:::-;;;:::i;:::-;701:1969:8;;;;;;;;;;;;3203:12:4;701:1969:8;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;701:1969:8;;;;;;;;;;;3203:12:4;701:1969:8;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;701:1969:8;;;;;;;;;;;;;;;;;;;4420:101:1;;701:1969:8;;;4420:101:1;4496:14;701:1969:8;;;;;;;;;;;;4496:14:1;4420:101;;;;701:1969:8;;;;;;;-1:-1:-1;701:1969:8;;;;;;;;;;-1:-1:-1;701:1969:8;;;-1:-1:-1;;701:1969:8;;;;;;;;;;;;;-1:-1:-1;701:1969:8;;;;;;;;;;;;;;;;-1:-1:-1;;701:1969:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;701:1969:8;;;;;;;;;;;;;-1:-1:-1;;;701:1969:8;;;;;;;;;;;;-1:-1:-1;701:1969:8;;;;;3203:12:4;701:1969:8;;;;-1:-1:-1;701:1969:8;;;;-1:-1:-1;;701:1969:8;;;;;;;;;;;;;-1:-1:-1;701:1969:8;;;;;;;;;3203:12:4;701:1969:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3203:12:4;701:1969:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;701:1969:8;;;;;;;;;;;;;;-1:-1:-1;;;701:1969:8;;;;;;;;4333:67:1;-1:-1:-1;;701:1969:8;;;;;4333:67:1;;;4139:157;701:1969:8;;-1:-1:-1;;;4265:20:1;;701:1969:8;;4265:20:1;4143:99;4196:4;;4188:25;:30;:53;;;4143:99;4186:56;4143:99;;4188:53;701:1969:8;4240:1:1;701:1969:8;;;4222:19:1;4188:53;;4145:36;701:1969:8;4180:1:1;701:1969:8;;;4163:18:1;4145:36;;701:1969:8;;;;;;;;;-1:-1:-1;;701:1969:8;;;;;;-1:-1:-1;;;;;701:1969:8;;:::i;:::-;;;;919:41;701:1969;;;;;;;;;;;-1:-1:-1;;;;;701:1969:8;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;701:1969:8;;;;;;;;;-1:-1:-1;701:1969:8;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;701:1969:8;5768:5:4;701:1969:8;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;5768:5:4;-1:-1:-1;701:1969:8;;;-1:-1:-1;;701:1969:8;;;;;;;-1:-1:-1;701:1969:8;;-1:-1:-1;;701:1969:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;701:1969:8;6096:8:4;701:1969:8;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6096:8:4;-1:-1:-1;701:1969:8;;;-1:-1:-1;;701:1969:8;;;;;;;-1:-1:-1;701:1969:8;;-1:-1:-1;;701:1969:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6429:141:1;701:1969:8;8179:65:1;701:1969:8;;;;6495:18:1;6491:73;;6429:141::o;6491:73::-;701:1969:8;;-1:-1:-1;;;6536:17:1;;;;;1909:766:3;701:1969:8;;;1909:766:3;2056:2;2036:22;;2056:2;;2519:25;2319:180;;;;;;;;;;;;;;;-1:-1:-1;2319:180:3;2519:25;;:::i;:::-;2512:32;;;;;:::o;2032:637::-;2575:83;;2591:1;2575:83;2595:35;2575:83;;:::o;4920:1530::-;;;5979:66;5966:79;;5962:164;;701:1969:8;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6237:24:3;;;;;;;;;;;;;;-1:-1:-1;;;;;701:1969:8;;6275:20:3;6271:113;;6394:49;;4920:1530;:::o;6271:113::-;6311:62;;;6237:24;6311:62;;:::o;6237:24::-;701:1969:8;;;;;;;;;;5962:164:3;6061:54;;;6077:1;6061:54;6081:30;6061:54;;:::o;6976:532::-;701:1969:8;;;;;;7062:29:3;;;7107:7;;:::o;7058:444::-;701:1969:8;7158:38:3;;701:1969:8;;;;-1:-1:-1;;;7219:23:3;;701:1969:8;;7219:23:3;7154:348;7272:35;7263:44;;7272:35;;701:1969:8;;-1:-1:-1;;;7330:46:3;;701:1969:8;7330:46:3;;701:1969:8;;;;;7330:46:3;7259:243;7406:30;7397:39;7393:109;;7259:243;6976:532::o;7393:109::-;701:1969:8;;;;7459:32:3;;;;;;701:1969:8;7459:32:3;;701:1969:8;7459:32:3;701:1969:8;;;;7071:20:3;701:1969:8;;;;;7071:20:3;701:1969:8;6326:630:4;701:1969:8;;:::i;:::-;;;;6443:22:4;;;;701:1969:8;;6488:22:4;6481:29;:::o;6439:511::-;-1:-1:-1;;;701:1969:8;6814:15:4;;;;6849:17;:::o;6810:130::-;6905:20;6912:13;6905:20;:::o;7177:666::-;701:1969:8;;:::i;:::-;;;;7303:25:4;;;;701:1969:8;;7351:25:4;7344:32;:::o;7299:538::-;-1:-1:-1;;7663:14:4;701:1969:8;7695:18:4;;;;7733:20;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "eip712Domain()": "84b0196e",
    "initialize()": "8129fc1c",
    "nonces(address)": "7ecebe00",
    "ownerAccounts(address)": "f641d5ec",
    "register(bytes,address,uint256)": "d95b8c12"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UsedNonce\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownerAccounts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AlreadyInitialized()\":[{\"details\":\"The contract is already initialized.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"register(bytes,address,uint256)\":{\"details\":\"Verifies the signature, updates the user's burner account, and records the nonce used.\",\"params\":{\"nonce\":\"The nonce associated with the user.\",\"signature\":\"The user's signed data.\",\"signer\":\"The address of the signer.\"}}},\"title\":\"Registry for Burner Accounts\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"initialize()\":{\"notice\":\"Initializes EIP-712.\"},\"register(bytes,address,uint256)\":{\"notice\":\"Registers a new burner account.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/BurnerAccountRegistry.sol\":\"BurnerAccountRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC5267Upgradeable.sol\":{\"keccak256\":\"0x9bb3749736d05dc2445ccafada95746e28ea452597a20fc4bcb94b2b0561dbce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46dd85ebf9179adb9e0a690673d444cd079be6c79e60ab2b8915557ac8b6d8d6\",\"dweb:/ipfs/QmbdNGKZwvVf7x2LN8FxpesATWbhQ3URvXrS3tr9J9EJNs\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xcc1fe9d45e08a5576b2d69005f811817bc2b843fe53d151937e1c3561cefa5ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fad4ffbfd558868658e9188116c3aee45afba563f1071ce37530e1d225f5d12\",\"dweb:/ipfs/QmcWevF1whxaXm3phCCKi2dcSg47N3bqiewpsPTn3fhWMr\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xdfde9c1705bebba1573160015f016fdd22de1e4bbb1150857b645ba7d45fc587\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1be0a1717ec14855557b9c355d855b729e49bcfa0f08eae439dde8af50b9069b\",\"dweb:/ipfs/QmaXFwYhAx6Wb5E6tUhpwxLqFx2qaTM3WwNZ57n7vPkBFJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xf40fcd67f0e1ca815788fb8719c24ea5d964f870a313c11a451f7feec741a96b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8eccae4b4243975278d33b963c655afd3f6020551ccf7fc57471ad392fb824c3\",\"dweb:/ipfs/QmRBFvg81zPSue3iRjeMcrRcyQ7F59XZpEavwk61XPfN4t\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0xd09518c0e9b3890db914793cde0cb99b242db7ddb981ba34523684eba6f9f3f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c46a9a36eb32f51414323ad08f94c249df64428a8f5a867e3a4bc9bb8ef5575\",\"dweb:/ipfs/QmRe4kxcB1FETN2ZLNDUctJAJspEiFQtGDZ6pHpvtRDLJs\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/MessageHashUtilsUpgradeable.sol\":{\"keccak256\":\"0x8de19b2400270689f15750bb1573b89b7bd8cfbe71539245eff3d3174dc6f0e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba45493c53d97e4472ff5e9a76a8d82ed12d0ab5f4ec00084324b370bcd7d9f8\",\"dweb:/ipfs/QmUMgbeqMSSR92NL4Qmoy5LQmJDANRKSUXPdHh9hZjAixa\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xf9cdfa51a0dd65cadb8ac127b3a318ce1186a8094393480ead9f6b5c324f5e3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c03eee1adcd77531060492ad2f3d08cac0bb2298b3aa36e5daa6545e6bf41380\",\"dweb:/ipfs/QmTw1eiccbBVa1YTxggNJx3LfA9LR3s692VTd8pZwxwP4U\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0xbffae367561aa7dfa744cf2b26202e4abc8e4607ecf33a6f2530f173b82e3c12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d15714171690c8effac1fa0317dc814e6c97716976635c3ba1a0f868b0bb0118\",\"dweb:/ipfs/QmRMKmqVRUXidoheVabu9BhRaLnzoqeSi79YvFFjXr2PuK\"]},\"src/BurnerAccountRegistry.sol\":{\"keccak256\":\"0x0174433f949cbe00586fd53ef8671599fd43a6699e34caa96d22f7950e9d4798\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://83d5a027b0ae2a3a62ce7223c9564b3ccd9e5e71e03e69906f9fb65324238812\",\"dweb:/ipfs/QmdVmtK5CKQW9zKpwnBTBk3MuCDHoP1dZVS924xzCCmB43\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyInitialized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSAInvalidSignature"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ECDSAInvalidSignatureLength"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "ECDSAInvalidSignatureS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSignature"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotInitializing"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UsedNonce"
        },
        {
          "inputs": [],
          "type": "event",
          "name": "EIP712DomainChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eip712Domain",
          "outputs": [
            {
              "internalType": "bytes1",
              "name": "fields",
              "type": "bytes1"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "version",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "verifyingContract",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "extensions",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerAccounts",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "register"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "custom:oz-upgrades-unsafe-allow": "constructor"
          },
          "eip712Domain()": {
            "details": "See {IERC-5267}."
          },
          "register(bytes,address,uint256)": {
            "details": "Verifies the signature, updates the user's burner account, and records the nonce used.",
            "params": {
              "nonce": "The nonce associated with the user.",
              "signature": "The user's signed data.",
              "signer": "The address of the signer."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "initialize()": {
            "notice": "Initializes EIP-712."
          },
          "register(bytes,address,uint256)": {
            "notice": "Registers a new burner account."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/BurnerAccountRegistry.sol": "BurnerAccountRegistry"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC5267Upgradeable.sol": {
        "keccak256": "0x9bb3749736d05dc2445ccafada95746e28ea452597a20fc4bcb94b2b0561dbce",
        "urls": [
          "bzz-raw://46dd85ebf9179adb9e0a690673d444cd079be6c79e60ab2b8915557ac8b6d8d6",
          "dweb:/ipfs/QmbdNGKZwvVf7x2LN8FxpesATWbhQ3URvXrS3tr9J9EJNs"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xcc1fe9d45e08a5576b2d69005f811817bc2b843fe53d151937e1c3561cefa5ae",
        "urls": [
          "bzz-raw://4fad4ffbfd558868658e9188116c3aee45afba563f1071ce37530e1d225f5d12",
          "dweb:/ipfs/QmcWevF1whxaXm3phCCKi2dcSg47N3bqiewpsPTn3fhWMr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xdfde9c1705bebba1573160015f016fdd22de1e4bbb1150857b645ba7d45fc587",
        "urls": [
          "bzz-raw://1be0a1717ec14855557b9c355d855b729e49bcfa0f08eae439dde8af50b9069b",
          "dweb:/ipfs/QmaXFwYhAx6Wb5E6tUhpwxLqFx2qaTM3WwNZ57n7vPkBFJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xf40fcd67f0e1ca815788fb8719c24ea5d964f870a313c11a451f7feec741a96b",
        "urls": [
          "bzz-raw://8eccae4b4243975278d33b963c655afd3f6020551ccf7fc57471ad392fb824c3",
          "dweb:/ipfs/QmRBFvg81zPSue3iRjeMcrRcyQ7F59XZpEavwk61XPfN4t"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol": {
        "keccak256": "0xd09518c0e9b3890db914793cde0cb99b242db7ddb981ba34523684eba6f9f3f7",
        "urls": [
          "bzz-raw://8c46a9a36eb32f51414323ad08f94c249df64428a8f5a867e3a4bc9bb8ef5575",
          "dweb:/ipfs/QmRe4kxcB1FETN2ZLNDUctJAJspEiFQtGDZ6pHpvtRDLJs"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/MessageHashUtilsUpgradeable.sol": {
        "keccak256": "0x8de19b2400270689f15750bb1573b89b7bd8cfbe71539245eff3d3174dc6f0e4",
        "urls": [
          "bzz-raw://ba45493c53d97e4472ff5e9a76a8d82ed12d0ab5f4ec00084324b370bcd7d9f8",
          "dweb:/ipfs/QmUMgbeqMSSR92NL4Qmoy5LQmJDANRKSUXPdHh9hZjAixa"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0xf9cdfa51a0dd65cadb8ac127b3a318ce1186a8094393480ead9f6b5c324f5e3e",
        "urls": [
          "bzz-raw://c03eee1adcd77531060492ad2f3d08cac0bb2298b3aa36e5daa6545e6bf41380",
          "dweb:/ipfs/QmTw1eiccbBVa1YTxggNJx3LfA9LR3s692VTd8pZwxwP4U"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol": {
        "keccak256": "0xbffae367561aa7dfa744cf2b26202e4abc8e4607ecf33a6f2530f173b82e3c12",
        "urls": [
          "bzz-raw://d15714171690c8effac1fa0317dc814e6c97716976635c3ba1a0f868b0bb0118",
          "dweb:/ipfs/QmRMKmqVRUXidoheVabu9BhRaLnzoqeSi79YvFFjXr2PuK"
        ],
        "license": "MIT"
      },
      "src/BurnerAccountRegistry.sol": {
        "keccak256": "0x0174433f949cbe00586fd53ef8671599fd43a6699e34caa96d22f7950e9d4798",
        "urls": [
          "bzz-raw://83d5a027b0ae2a3a62ce7223c9564b3ccd9e5e71e03e69906f9fb65324238812",
          "dweb:/ipfs/QmdVmtK5CKQW9zKpwnBTBk3MuCDHoP1dZVS924xzCCmB43"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/BurnerAccountRegistry.sol",
    "id": 2500,
    "exportedSymbols": {
      "BurnerAccountRegistry": [
        2499
      ],
      "ECDSAUpgradeable": [
        872
      ],
      "EIP712Upgradeable": [
        1157
      ]
    },
    "nodeType": "SourceUnit",
    "src": "412:2259:8",
    "nodes": [
      {
        "id": 2392,
        "nodeType": "PragmaDirective",
        "src": "412:24:8",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 2394,
        "nodeType": "ImportDirective",
        "src": "438:109:8",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2500,
        "sourceUnit": 873,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2393,
              "name": "ECDSAUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 872,
              "src": "446:16:8",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2396,
        "nodeType": "ImportDirective",
        "src": "548:111:8",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2500,
        "sourceUnit": 1158,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2395,
              "name": "EIP712Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1157,
              "src": "556:17:8",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2499,
        "nodeType": "ContractDefinition",
        "src": "701:1969:8",
        "nodes": [
          {
            "id": 2403,
            "nodeType": "VariableDeclaration",
            "src": "821:48:8",
            "nodes": [],
            "constant": false,
            "functionSelector": "f641d5ec",
            "mutability": "mutable",
            "name": "ownerAccounts",
            "nameLocation": "856:13:8",
            "scope": 2499,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 2402,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 2400,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "829:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "821:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 2401,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "840:7:8",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 2407,
            "nodeType": "VariableDeclaration",
            "src": "919:41:8",
            "nodes": [],
            "constant": false,
            "functionSelector": "7ecebe00",
            "mutability": "mutable",
            "name": "nonces",
            "nameLocation": "954:6:8",
            "scope": 2499,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2406,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 2404,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "927:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "919:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 2405,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "938:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 2409,
            "nodeType": "ErrorDefinition",
            "src": "1003:25:8",
            "nodes": [],
            "errorSelector": "8baa579f",
            "name": "InvalidSignature",
            "nameLocation": "1009:16:8",
            "parameters": {
              "id": 2408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1025:2:8"
            }
          },
          {
            "id": 2411,
            "nodeType": "ErrorDefinition",
            "src": "1061:18:8",
            "nodes": [],
            "errorSelector": "a4c7910c",
            "name": "UsedNonce",
            "nameLocation": "1067:9:8",
            "parameters": {
              "id": 2410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1076:2:8"
            }
          },
          {
            "id": 2419,
            "nodeType": "FunctionDefinition",
            "src": "1138:53:8",
            "nodes": [],
            "body": {
              "id": 2418,
              "nodeType": "Block",
              "src": "1152:39:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2415,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 237,
                      "src": "1162:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1162:22:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2417,
                  "nodeType": "ExpressionStatement",
                  "src": "1162:22:8"
                }
              ]
            },
            "documentation": {
              "id": 2412,
              "nodeType": "StructuredDocumentation",
              "src": "1085:48:8",
              "text": "@custom:oz-upgrades-unsafe-allow constructor"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 2413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1149:2:8"
            },
            "returnParameters": {
              "id": 2414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1152:0:8"
            },
            "scope": 2499,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2431,
            "nodeType": "FunctionDefinition",
            "src": "1234:107:8",
            "nodes": [],
            "body": {
              "id": 2430,
              "nodeType": "Block",
              "src": "1277:64:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4275726e65724163636f756e745265676973747279",
                        "id": 2426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1301:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1cf4968247068a0b0122bca1bfd14946c8550cce3644288183f1cf7442f89ad5",
                          "typeString": "literal_string \"BurnerAccountRegistry\""
                        },
                        "value": "BurnerAccountRegistry"
                      },
                      {
                        "hexValue": "302e312e30",
                        "id": 2427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1326:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa7cdbe2cce2ec7b606b0e199ddd9b264a6e645e767fb8479a7917dcd1b8693f",
                          "typeString": "literal_string \"0.1.0\""
                        },
                        "value": "0.1.0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1cf4968247068a0b0122bca1bfd14946c8550cce3644288183f1cf7442f89ad5",
                          "typeString": "literal_string \"BurnerAccountRegistry\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa7cdbe2cce2ec7b606b0e199ddd9b264a6e645e767fb8479a7917dcd1b8693f",
                          "typeString": "literal_string \"0.1.0\""
                        }
                      ],
                      "id": 2425,
                      "name": "__EIP712_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 915,
                      "src": "1287:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 2428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1287:47:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2429,
                  "nodeType": "ExpressionStatement",
                  "src": "1287:47:8"
                }
              ]
            },
            "documentation": {
              "id": 2420,
              "nodeType": "StructuredDocumentation",
              "src": "1197:32:8",
              "text": "@notice Initializes EIP-712."
            },
            "functionSelector": "8129fc1c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2423,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2422,
                  "name": "initializer",
                  "nameLocations": [
                    "1265:11:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 123,
                  "src": "1265:11:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1265:11:8"
              }
            ],
            "name": "initialize",
            "nameLocation": "1243:10:8",
            "parameters": {
              "id": 2421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1253:2:8"
            },
            "returnParameters": {
              "id": 2424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1277:0:8"
            },
            "scope": 2499,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2498,
            "nodeType": "FunctionDefinition",
            "src": "1650:1018:8",
            "nodes": [],
            "body": {
              "id": 2497,
              "nodeType": "Block",
              "src": "1762:906:8",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2441,
                      "name": "nonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2438,
                      "src": "1818:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 2442,
                        "name": "nonces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2407,
                        "src": "1827:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2444,
                      "indexExpression": {
                        "id": 2443,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2436,
                        "src": "1834:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1827:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1818:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2450,
                  "nodeType": "IfStatement",
                  "src": "1814:72:8",
                  "trueBody": {
                    "id": 2449,
                    "nodeType": "Block",
                    "src": "1843:43:8",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2446,
                            "name": "UsedNonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2411,
                            "src": "1864:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1864:11:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2448,
                        "nodeType": "RevertStatement",
                        "src": "1857:18:8"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2452
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2452,
                      "mutability": "mutable",
                      "name": "digest",
                      "nameLocation": "1904:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2497,
                      "src": "1896:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2451,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1896:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2467,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "557365722861646472657373207369676e65722c75696e74323536206e6f6e63652c616464726573732074617267657429",
                                    "id": 2458,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2037:51:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_089f3bcde4e6fb1e7b59677ffac384b0d05d87e4a54f17b628082a912e03d6e4",
                                      "typeString": "literal_string \"User(address signer,uint256 nonce,address target)\""
                                    },
                                    "value": "User(address signer,uint256 nonce,address target)"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_089f3bcde4e6fb1e7b59677ffac384b0d05d87e4a54f17b628082a912e03d6e4",
                                      "typeString": "literal_string \"User(address signer,uint256 nonce,address target)\""
                                    }
                                  ],
                                  "id": 2457,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "2002:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 2459,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2002:108:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 2460,
                                "name": "signer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2436,
                                "src": "2132:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 2461,
                                "name": "nonce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2438,
                                "src": "2160:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2462,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2187:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2463,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2191:6:8",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2187:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 2455,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "1970:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 2456,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1974:6:8",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "1970:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 2464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1970:245:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 2454,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "1943:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 2465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1943:286:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 2453,
                      "name": "_hashTypedDataV4",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 990,
                      "src": "1913:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) view returns (bytes32)"
                      }
                    },
                    "id": 2466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1913:326:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1896:343:8"
                },
                {
                  "assignments": [
                    2469
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2469,
                      "mutability": "mutable",
                      "name": "recoveredSigner",
                      "nameLocation": "2317:15:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2497,
                      "src": "2309:23:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2468,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2309:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2475,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2472,
                        "name": "digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2452,
                        "src": "2360:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2473,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2434,
                        "src": "2368:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2470,
                        "name": "ECDSAUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 872,
                        "src": "2335:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ECDSAUpgradeable_$872_$",
                          "typeString": "type(library ECDSAUpgradeable)"
                        }
                      },
                      "id": 2471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2352:7:8",
                      "memberName": "recover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 628,
                      "src": "2335:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 2474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2335:43:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2309:69:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2476,
                      "name": "recoveredSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2469,
                      "src": "2464:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 2477,
                      "name": "signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2436,
                      "src": "2483:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2464:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2483,
                  "nodeType": "IfStatement",
                  "src": "2460:81:8",
                  "trueBody": {
                    "id": 2482,
                    "nodeType": "Block",
                    "src": "2491:50:8",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2479,
                            "name": "InvalidSignature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2409,
                            "src": "2512:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2512:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2481,
                        "nodeType": "RevertStatement",
                        "src": "2505:25:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2484,
                        "name": "nonces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2407,
                        "src": "2594:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2486,
                      "indexExpression": {
                        "id": 2485,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2436,
                        "src": "2601:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2594:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2487,
                      "name": "nonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2438,
                      "src": "2611:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2594:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2489,
                  "nodeType": "ExpressionStatement",
                  "src": "2594:22:8"
                },
                {
                  "expression": {
                    "id": 2495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2490,
                        "name": "ownerAccounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2403,
                        "src": "2627:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 2493,
                      "indexExpression": {
                        "expression": {
                          "id": 2491,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2641:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2645:6:8",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2641:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2627:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2494,
                      "name": "signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2436,
                      "src": "2655:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2627:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2496,
                  "nodeType": "ExpressionStatement",
                  "src": "2627:34:8"
                }
              ]
            },
            "documentation": {
              "id": 2432,
              "nodeType": "StructuredDocumentation",
              "src": "1347:298:8",
              "text": "@notice Registers a new burner account.\n @dev Verifies the signature, updates the user's burner account, and records the nonce used.\n @param signature The user's signed data.\n @param signer The address of the signer.\n @param nonce The nonce associated with the user."
            },
            "functionSelector": "d95b8c12",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "register",
            "nameLocation": "1659:8:8",
            "parameters": {
              "id": 2439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2434,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "1690:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2498,
                  "src": "1677:22:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2433,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1677:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2436,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "1717:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2498,
                  "src": "1709:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2435,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1709:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2438,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "1741:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2498,
                  "src": "1733:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1733:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1667:85:8"
            },
            "returnParameters": {
              "id": 2440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1762:0:8"
            },
            "scope": 2499,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2398,
              "name": "EIP712Upgradeable",
              "nameLocations": [
                "735:17:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1157,
              "src": "735:17:8"
            },
            "id": 2399,
            "nodeType": "InheritanceSpecifier",
            "src": "735:17:8"
          }
        ],
        "canonicalName": "BurnerAccountRegistry",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2397,
          "nodeType": "StructuredDocumentation",
          "src": "661:40:8",
          "text": "@title Registry for Burner Accounts"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          2499,
          1157,
          24,
          269
        ],
        "name": "BurnerAccountRegistry",
        "nameLocation": "710:21:8",
        "scope": 2500,
        "usedErrors": [
          41,
          44,
          535,
          540,
          545,
          2409,
          2411
        ],
        "usedEvents": [
          4,
          49
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 8
}